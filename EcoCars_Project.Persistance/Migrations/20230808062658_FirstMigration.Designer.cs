// <auto-generated />
using System;
using EcoCars_Project.Persistance.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EcoCars_Project.Persistance.Migrations
{
    [DbContext(typeof(EcoCarsDbContext))]
    [Migration("20230808062658_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EcoCars_Project.Domain.Entities.Brand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("EcoCars_Project.Domain.Entities.GeneralInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("GeneralInfos");
                });

            modelBuilder.Entity("EcoCars_Project.Domain.Entities.GeneralType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("GeneralTypes");
                });

            modelBuilder.Entity("EcoCars_Project.Domain.Entities.Model", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Models");
                });

            modelBuilder.Entity("EcoCars_Project.Domain.Entities.TB_Ads", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Ban_Type")
                        .HasColumnType("integer");

                    b.Property<bool>("Barter")
                        .HasColumnType("boolean");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Color_Id")
                        .HasColumnType("integer");

                    b.Property<bool>("Condisioner")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Credit_Have")
                        .HasColumnType("boolean");

                    b.Property<int>("Currency_Id")
                        .HasColumnType("integer");

                    b.Property<int>("Distance")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Leather_Salon")
                        .HasColumnType("boolean");

                    b.Property<bool>("Lyuk")
                        .HasColumnType("boolean");

                    b.Property<Guid>("Model_Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Park_Radar")
                        .HasColumnType("boolean");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<bool>("Rear_Camera")
                        .HasColumnType("boolean");

                    b.Property<bool>("Seat_Heating")
                        .HasColumnType("boolean");

                    b.Property<int>("Speed_Box")
                        .HasColumnType("integer");

                    b.Property<int>("Transmission_Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("TB_Ads");
                });

            modelBuilder.Entity("EcoCars_Project.Domain.Entities.TB_AdsImages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("Ads_Id")
                        .HasColumnType("uuid");

                    b.Property<string>("CarImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Ads_Id");

                    b.ToTable("TB_AdsImages");
                });

            modelBuilder.Entity("EcoCars_Project.Domain.Entities.GeneralInfo", b =>
                {
                    b.HasOne("EcoCars_Project.Domain.Entities.GeneralType", "GeneralType")
                        .WithMany("GeneralInfo")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GeneralType");
                });

            modelBuilder.Entity("EcoCars_Project.Domain.Entities.Model", b =>
                {
                    b.HasOne("EcoCars_Project.Domain.Entities.Brand", "Brand")
                        .WithMany("Models")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("EcoCars_Project.Domain.Entities.TB_AdsImages", b =>
                {
                    b.HasOne("EcoCars_Project.Domain.Entities.TB_Ads", "TB_Ads")
                        .WithMany("TB_AdsImages")
                        .HasForeignKey("Ads_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TB_Ads");
                });

            modelBuilder.Entity("EcoCars_Project.Domain.Entities.Brand", b =>
                {
                    b.Navigation("Models");
                });

            modelBuilder.Entity("EcoCars_Project.Domain.Entities.GeneralType", b =>
                {
                    b.Navigation("GeneralInfo");
                });

            modelBuilder.Entity("EcoCars_Project.Domain.Entities.TB_Ads", b =>
                {
                    b.Navigation("TB_AdsImages");
                });
#pragma warning restore 612, 618
        }
    }
}
